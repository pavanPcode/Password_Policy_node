swagger: "2.0"
info:
  version: "1.0.0"
  title: "User Authentication API"
  description: "APIs for user registration and login with password policy checks"
basePath: "/"

consumes:
  - application/json
produces:
  - application/json
paths:
  /register:
    post:
      summary: "Register a new user"
      description: "Register a user after validating password against policy and storing secure info."
      tags:
        - auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - name
              - username
              - role
            properties:
              name:
                type: string
                example: "test12"
              username:
                type: string
                example: "ravi6@domain.com"
              role:
                type: integer
                example: 1
      responses:
        201:
          description: "User registered successfully."
        400:
          description: "Validation failed or email already exists."
        500:
          description: "Server error"

  /login:
    post:
      summary: "User Login"
      description: "Login user with account lock, expiry, and failed attempts logic."
      tags:
        - auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                example: "ravi6@domain.com"
              password:
                type: string
                example: "Test@1234"
      responses:
        200:
          description: "Login successful."
        401:
          description: "Incorrect password"
        403:
          description: "Account locked or password expired"
        404:
          description: "User not found"
        500:
          description: "Login failed"
  /UserChangePassword:
    post:
      tags:
        - auth
      summary: Change user's password
      description: Change the user's password after validating the new password against the policy.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - username
              - new_password
              - old_password
            properties:
              username:
                type: string
                example: "ravi6@domain.com"
              new_password:
                type: string
                example: "Test@1234567"
              old_password:
                type: string
                example: "Test@1234567"
              PerformedBy:
                type: string
                description: ID of the person performing the action
                example: "5"
      responses:
        200:
          description: Password changed successfully
        400:
          description: Validation failed or weak password
        404:
          description: User not found
        500:
          description: Server error
  /adminChangePassword:
    post:
      tags:
        - auth
      summary: generate user's password to  TemporaryPassword
      description: generate the user's password after validating the new password against the policy.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
                example: "ravi6@domain.com"
              PerformedBy:
                type: string
                description: ID of the person performing the action
                example: "5"
      responses:
        200:
          description: Password generated successfully
        400:
          description: Validation failed 
        404:
          description: User not found
        500:
          description: Server error
  /updatepasswordPolicy:
    post:
      tags:
        - Password Policy
      summary: Update or create the password policy
      description: "If a policy exists, it will be updated. If not, a new one will be created."
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - MinLength
              - RequireUppercase
              - RequireLowercase
              - RequireDigit
              - RequireSpecialChar
              - ExpiryDays
              - MaxFailedAttempts
              - ReuseHistoryCount
              - LockoutDurationMinutes
              - sessionTimeoutMinutes
            properties:
              MinLength:
                type: integer
                example: 8
              RequireUppercase:
                type: integer
                enum: [0, 1]
                example: 1
              RequireLowercase:
                type: integer
                enum: [0, 1]
                example: 1
              RequireDigit:
                type: integer
                enum: [0, 1]
                example: 1
              RequireSpecialChar:
                type: integer
                enum: [0, 1]
                example: 1
              ExpiryDays:
                type: integer
                example: 75
              MaxFailedAttempts:
                type: integer
                example: 5
              ReuseHistoryCount:
                type: integer
                example: 5
              LockoutDurationMinutes:
                type: integer
                example: 15
              sessionTimeoutMinutes:
                type: integer
                example: 5
              PerformedBy:
                type: string
                description: ID of the person performing the action
                example: "5"
      responses:
        200:
          description: Password policy updated or created
        500:
          description: Server error
  /getPasswordPolicy:
    get:
      tags:
        - Password Policy
      summary: Get current password policy
      description: Retrieve the currently active password policy.
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Current password policy returned
          schema:
            type: object
            properties:
              MinLength:
                type: integer
                example: 8
              RequireUppercase:
                type: integer
                example: 1
              RequireLowercase:
                type: integer
                example: 1
              RequireDigit:
                type: integer
                example: 1
              RequireSpecialChar:
                type: integer
                example: 1
              ExpiryDays:
                type: integer
                example: 75
              MaxFailedAttempts:
                type: integer
                example: 5
              ReuseHistoryCount:
                type: integer
                example: 5
              LockoutDurationMinutes:
                type: integer
                example: 15
        404:
          description: Policy not found
        500:
          description: Server error
  /addActivity:
    post:
      tags:
        - Activity
      summary: Insert user activity
      description: Logs a new activity record for the user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - ActivityType
              - PerformedBy
              - PerformedOn
            properties:
              ActivityType:
                type: integer
                example: 1
              PerformedBy:
                type: integer
                example: 2
              PerformedOn:
                type: string
                format: date-time
                example: "2025-07-01 15:36:06"
              Notes:
                type: string
                example: "tsgs"
              Location:
                type: string
                example: "login"
              IsSucces:
                type: bit
                example: 1
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getActivities:
    get:
      tags:
        - Activity
      summary: Retrieve all activity logs
      description: Returns a list of all user activity logs sorted by PerformedOn in descending order.
      produces:
        - application/json
      responses:
        200:
          description: Successfully retrieved activity logs
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activities fetched successfully
              status:
                type: boolean
                example: true
              ResultData:
                type: array
                items:
                  type: object
                  properties:
                    ActivityType:
                      type: integer
                      example: 1
                    PerformedBy:
                      type: string
                      example: "admin"
                    PerformedOn:
                      type: string
                      format: date-time
                      example: "2025-07-03T16:32:00.000Z"
                    Notes:
                      type: string
                      example: Checked HVAC system
                    Location:
                      type: string
                      example: Server Room
        500:
          description: Failed to fetch activities
          schema:
            type: object
            properties:
              message:
                type: string
                example: Failed to fetch activities
              status:
                type: boolean
                example: false
              ResultData:
                type: array
                example: []
  /GetAHUMachines:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AddAHUMachines:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /EditAHUMachines:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /DeleteAHUMachines:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /DeleteAHUFilters:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /EditAHUFilters:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AddAHUFilters:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /GetAHUFilters:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AHUFiltersUpdateStatus:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AHUFilterGenerateBarcode:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getNotifications:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AuditTrial:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getSchedule:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getDeviationsAlarms:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getReplacementList:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getRetirementList:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getUser:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /AddUser:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /EditUser:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /DeleteUser:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getRolePermissions:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getFilterTypes:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /addFilterTypes:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /editFilterTypes:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /deleteFilterTypes:
    post:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              PerformedBy:
                type: string
                description: ID of the person performing the action (defaults to '2' if not provided)
                example: "5"
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getDashboard:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
  /getSidebar:
    get:
      tags:
        - ALL
      summary:  activity
      description: Logs .
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: PerformedBy
          in: query
          required: false
          type: string
          description: ID of the person performing the action (defaults to '2' if not provided)
      responses:
        200:
          description: Activity inserted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Activity inserted successfully
              status:
                type: boolean
                example: true
        400:
          description: Missing required fields
        500:
          description: Failed to insert activity
